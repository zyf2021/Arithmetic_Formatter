# -*- coding: utf-8 -*-
"""Arithmetic Formatter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IKoxOX8SzsohURhYNKQfh0p6k3xrVADx
"""

def get_dashes(n):
  dashes = ''
  for i in range(n+1):
    dashes += '-'
  return dashes

def get_spaces(n, len_1, len_2):
  n = abs(len_1 - len_2)
  spaces = ''
  for i in range(n):
    spaces += ' '
  return spaces

def form_str_right(str_to_format, max_len, str_to_format_1 = '', sign = ''):
  #str_format - это текущая строка с числом
  #max_len - максимальная необходимая длина строки
  #str_to_format_1 - строка первого слагаемого для вычисления количтсева пробелов от знака до вторго числа
  #знак
  if sign == '':
    n_spaces = max_len - len(str_to_format)
    str_spaces = ' '
    for i in range(n_spaces):
      str_spaces += ' '
  if (sign != '')&(str_to_format_1 != ''):
    n_spaces =  abs(len(str_to_format) - len(str_to_format_1))
    str_spaces = sign + ' '
    for i in range(n_spaces):
      str_spaces += ' '
  return str_spaces + str_to_format + '    '

def arithmetic_arranger(a_list, flag = False):
  str_term = []
  str_term_2 = []
  str_term_3 = []
  str_term_4 = []
  answers = []
  number_1 = 0  
  number_2 = 0 
  
  try:
    if (len(a_list)>5):
      raise BaseException
  except:
    return 'Error: Too many problems.'
  
  for i in range(len(a_list)):
    str_split = a_list[i].split()
    
    try:
      number_1 = int(str_split[0])
      number_2 = int(str_split[2])
    except:
      return "Error: Numbers must only contain digits."
    try:
      if (len(str_split[0])>4) or (len(str_split[2])>4):
        raise BaseException
    except:
      return 'Error: Numbers cannot be more than four digits.'
    try:
      if ((str_split[1] != '+') and (str_split[1] != '-') ):
        raise BaseException
    except:
      return 'Error: Operator must be \'+\' or \'-\.'
    
    max_len = max(len(str_split[0]),len(str_split[2])) + 1
    
    if (str_split[1] == '+'):
      answers.append(number_1 + number_2)
    if (str_split[1] == '-'):
      answers.append(number_1 - number_2)
      
    str_term.append(form_str_right(str_split[0], max_len))
    str_term_2.append(form_str_right(str_split[2], max_len, str_split[0], str_split[1]))
    str_term_3.append(get_dashes(max_len) + '    ')
    str_term_4.append(form_str_right(str(answers[i]), max_len))
    
  for i in range(len(a_list)):
    print(str_term[i],  end = "") 
  print()
  for i in range(len(a_list)):
    print(str_term_2[i],  end = "")
  print()
  for i in range(len(a_list)):
    print(str_term_3[i],  end = "")
  if flag:
    print()
    for i in range(len(a_list)):
      print(str_term_4[i],  end = "")

a_list = ["665 + 69", "169 - 2", "45 + 43", "123 + 49"]
arithmetic_arranger(a_list, True)